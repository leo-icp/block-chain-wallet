{"version":3,"sources":["components/Footer/index.jsx","components/MessageAlert.jsx","components/Reward/index.jsx","components/SessionStorageData/index.jsx","utils/Export2Excel.js","utils/ExportToExcel.js","utils/wallet/create/ETH.js","view/batch/batch.jsx","view/batch/consecutive.jsx","view/batch/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","href","target","MessageAlert","message","handleClose","onClose","showTimes","Index","setMessage","React","useState","rewardList","setRewardList","name","address","qrCode","clipboard","ClipboardJS","on","e","setTimeout","undefined","map","item","index","onClick","_rewardList","value","size","SessionStorageData","data","download","defaultData","defaultHistory","setDefaultHistory","history","setHistory","useEffect","async","arr","i","push","align","_defaultHistory","splice","_history","span","row","time","createTime","Date","toLocaleTimeString","toLocaleDateString","length","s2ab","s","buf","ArrayBuffer","view","Uint8Array","charCodeAt","Workbook","this","SheetNames","Sheets","toExcel","th","fileName","fileType","sheetName","unshift","wb","ws","range","c","r","R","C","cell","v","cellRef","XLSX","utils","encode_cell","t","z","SSF","_table","encode_range","data2ws","wbout","write","bookType","bookSST","type","saveAs","Blob","ExportToExcel","filterVal","jsonData","j","formatJson","createETHWallet","count","Promise","resolve","reject","mnemonic","generateMnemonic","seed","Wallet","fromMnemonic","RegExp","test","privateKey","publicKey","walletList","createWalletList","Batch","walletType","setWalletType","currentAccounts","setCurrentAccounts","frequency","setFrequency","setCount","currentCount","setCurrentCount","loading","setLoading","onChange","clearTimeout","createWallet","createWalletTime","handleCreateWallet","callback","result","now","disabled","accounts","setAccounts","handleCopy","clearInterval","setInterval","style","marginBottom","toLowerCase","text","JSON","stringify","onCopy","packageJSON","version","viewBox","xmlns","width","height","d","fill","to","exact","strict","path","component","Consecutive","basename","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.15c9a1a6.chunk.js","sourcesContent":["import React from 'react';\nimport './index.scss'\n\nexport default function Footer(){\n\n    return (\n        <div className=\"provided\">\n            <p className=\"contact\">\n                <a href=\"mailto:noshufu@gmail.com\" target=\"_blank\">\n                    联系我: noshufu@gmail.com\n                </a>\n            </p>\n        </div>\n    )\n}\n","import React from \"react\";\n\n\nexport default function MessageAlert({message, handleClose}) {\n  return (\n    message ? <div className=\"Reward-Snackbar\">\n        <span onClose={handleClose}>\n            {message}\n        </span>\n    </div>:null\n  )\n}","import React from 'react';\nimport QRCode from 'qrcode.react';\nimport ClipboardJS from 'clipboard'\nimport './index.scss'\nimport MessageAlert from \"../MessageAlert\";\nlet showTimes = null;\nexport default function Index() {\n    const [message, setMessage] = React.useState(false);\n    const [rewardList, setRewardList] = React.useState([\n        {\n            name: 'ETH',\n            address: '0x18796AD54e7393F90ae64e9fFA1A2ba6C3999999',\n            qrCode: false\n        },\n        {\n            name: 'BTC',\n            address: '3MCitSBfq6gjXpWSkfGCGhTom14TCghmtm',\n            qrCode: false\n        },\n        {\n            name: 'TRX',\n            address: 'TYg4cWXQGP7RnnizSZEXtqmNnsydi3BxbP',\n            qrCode: false\n        },\n        // {\n        //     name: 'EOS',\n        //     address: 'mnemonic1234',\n        //     qrCode: false\n        // }\n    ])\n    const handleClick = () => {\n        setMessage(\"复制成功\");\n        showTimes = setTimeout(()=>{\n            setMessage(undefined);\n        },1000)\n    };\n    const clipboard = new ClipboardJS('.copyBtn');\n    clipboard.on('success', function(e) {\n        handleClick()\n    });\n    clipboard.on('error', function(e) {\n    });\n    return (\n        <div className=\"Reward\">\n\n            <MessageAlert message={message} handleClose={()=>setMessage(\"\")}/>\n            <h3>捐赠和支持</h3>\n            <ul aria-label=\"main mailbox folders\">\n                {\n                    rewardList.map((item, index)=>{\n                        return (\n                            <li key={item.name}>\n                                <p className=\"rewardAddress\">\n                                    <label>{item.name}: </label>\n                                    {item.address}\n                                    <a className=\"copyBtn\" data-clipboard-text={item.address}>Copy</a>\n                                    <a className=\"qrcodeBtn\" onClick={()=>{\n                                        let _rewardList = [...rewardList];\n                                        _rewardList[index].qrCode = !_rewardList[index].qrCode;\n                                        setRewardList(_rewardList)\n                                    }}>QRCode</a>\n                                </p>\n                                {\n                                    item.qrCode && <QRCode\n                                        className=\"qrcode\"\n                                        value={item.address}\n                                        size={100}\n                                    />\n                                }\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </div>\n    );\n}\n","import React,{useEffect, useState} from 'react'\nimport './index.scss'\nexport default function SessionStorageData({data, download,defaultData}){\n    const [defaultHistory, setDefaultHistory] = useState(defaultData)\n    const [history, setHistory] = useState([])\n    useEffect(async ()=>{\n        if (!data){\n            let arr = []\n            for (let i = 0; i<4;i++){\n                arr.push(\n                    <tr key={i}>\n                        <td align=\"left\">&nbsp;</td>\n                        <td align=\"center\">&nbsp;</td>\n                        <td align=\"center\">&nbsp;</td>\n                        <td align=\"right\">&nbsp;</td>\n                    </tr>\n                )\n            }\n            setDefaultHistory(arr)\n            return;\n        };\n        if (data){\n            let _defaultHistory = [...defaultHistory];\n            _defaultHistory.splice(0, 1);\n            await setDefaultHistory(_defaultHistory)\n        }\n        const _history = [data,...history];\n        await setHistory(_history)\n    }, [data]);\n    const handleDownHistory = (item)=>{\n        download(item.data,item.name)\n    }\n    const Time = (time)=>{\n        return `${new Date(time).toLocaleTimeString()} ${new Date(time).toLocaleDateString()}`\n    }\n    return (\n            <div className=\"sessionStorage\">\n                <table>\n                    <caption>\n                        <h3>本地记录</h3>\n                    </caption>\n                    <colgroup>\n                        <col className=\"column1\" />\n                        <col className=\"columns2plus3\" span=\"2\" />\n                    </colgroup>\n                    <thead>\n                        <tr>\n                            <th align=\"left\">创建时间</th>\n                            <th align=\"center\">文件名</th>\n                            <th align=\"center\">创建数量</th>\n                            <th align=\"right\"></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {history.map((row) => (\n                            <tr key={row.name}>\n                                <td align=\"left\">{Time(row.createTime)}</td>\n                                <td align=\"center\">{row.name}</td>\n                                <td align=\"center\">{row.data.length}</td>\n                                <td align=\"right\">\n                                    <button onClick={()=>{handleDownHistory(row)}}>\n                                        下载\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                        {defaultHistory}\n                    </tbody>\n                </table>\n            </div>\n    )\n}\n","/*************这段直接复制就好，看明白最好，不明白也不影响使用*************/\nimport XLSX from 'xlsx'\nimport { saveAs } from 'file-saver'\n\nfunction s2ab(s) {\n  let buf = new ArrayBuffer(s.length)\n  let view = new Uint8Array(buf)\n  for (let i = 0; i !== s.length; ++i) {\n    view[i] = s.charCodeAt(i) & 0xFF\n  }\n  return buf\n}\nfunction data2ws(data) {\n  const ws = {}\n  const range = {s: {c: 10000000, r: 10000000}, e: {c: 0, r: 0}}\n  for (let R = 0; R !== data.length; ++R) {\n    for (let C = 0; C !== data[R].length; ++C) {\n      if (range.s.r > R) range.s.r = R\n      if (range.s.c > C) range.s.c = C\n      if (range.e.r < R) range.e.r = R\n      if (range.e.c < C) range.e.c = C\n      const cell = { v: data[R][C] }\n      if (cell.v == null) continue\n      const cellRef = XLSX.utils.encode_cell({c: C, r: R})\n      if (typeof cell.v === 'number') cell.t = 'n'\n      else if (typeof cell.v === 'boolean') cell.t = 'b'\n      else if (cell.v instanceof Date) {\n        cell.t = 'n'\n        cell.z = XLSX.SSF._table[14]\n      } else {\n        cell.t = 's'\n      }\n      ws[cellRef] = cell\n    }\n  }\n  if (range.s.c < 10000000){\n    ws['!ref'] = XLSX.utils.encode_range(range)\n  }\n  return ws\n}\nfunction Workbook () {\n  if (!(this instanceof Workbook)) {\n    return new Workbook()\n  }\n  this.SheetNames = []\n  this.Sheets = {}\n}\n/*\n* th => 表头\n* data => 数据\n* fileName => 文件名\n* fileType => 文件类型\n* sheetName => sheet页名\n*/\n//导出封装好的方法\nexport default function toExcel ({th, data, fileName, fileType, sheetName}) {\n  data.unshift(th)\n  const wb = new Workbook()\n  const ws = data2ws(data)\n  sheetName = sheetName || 'sheet1'\n  wb.SheetNames.push(sheetName)\n  wb.Sheets[sheetName] = ws\n  fileType = fileType || 'xlsx'\n  var wbout = XLSX.write(wb, {bookType: fileType, bookSST: false, type: 'binary'})\n  fileName = fileName || '列表'\n  saveAs(new Blob([s2ab(wbout)], {type: 'application/octet-stream'}), `${fileName}.${fileType}`)\n}\n","import toExcel from \"./Export2Excel\";\nfunction formatJson(filterVal, jsonData){\n    return jsonData.map(v => filterVal.map(j => v[j]))\n}\nexport default async function ExportToExcel(arr,name, type = 'xlsx'){\n    const th = ['address', 'publicKey', 'privateKey', 'mnemonic']\n    const filterVal = ['address', 'publicKey', 'privateKey', 'mnemonic']\n    const data=formatJson(filterVal, arr);\n    if (type === 'xlsx'){\n        await toExcel({th,data,fileName:`${name}`,fileType:\"xlsx\",sheetName:\"sheet名\"})\n    } else {\n        // await toJSON({th,data,fileName:`${name}`,fileType:\"xlsx\",sheetName:\"sheet名\"})\n    }\n}\n","import {Wallet} from 'ethers';\nimport {generateMnemonic} from 'bip39';\nexport default function createETHWallet(count = 0){\n    return new Promise(async (resolve, reject) => {\n        const mnemonic = generateMnemonic(),seed = Wallet.fromMnemonic(mnemonic);\n        if (count > 1) {\n            if (new RegExp(`(\\\\w)\\\\1{${count},}$`,'gi').test(seed.address)) {\n                resolve({\n                    privateKey:seed.privateKey,\n                    publicKey:seed.publicKey,\n                    address:seed.address,\n                    mnemonic\n                })\n            } else {\n                resolve(false);\n            };\n        }\n        resolve({\n            privateKey:seed.privateKey,\n            publicKey:seed.publicKey,\n            address:seed.address,\n            mnemonic\n        })\n    })\n}\n","import SessionStorageData from \"../../components/SessionStorageData\";\nimport ExportToExcel from \"../../utils/ExportToExcel\";\nimport React, {useState} from \"react\";\nimport {createETHWallet} from \"../../utils/wallet/create\";\nimport MessageAlert from \"../../components/MessageAlert\";\nconst walletList = ['ETH']\nconst createWalletList = {\n    createETHWallet\n}\nlet showTimes = null;\nexport default function Batch() {\n    const [message, setMessage] = React.useState(false);\n    const [walletType, setWalletType] = useState(walletList[0]);\n    const [currentAccounts, setCurrentAccounts] = useState(undefined);\n    const [frequency, setFrequency] = useState(1);\n    const [count, setCount] = useState(1);\n    const [currentCount, setCurrentCount] = useState(0);\n    const [loading, setLoading] = useState(false)\n\n    const countArr = [10,20,50,100,200,500]\n    async function create(){\n        if (!count || count <= 0){\n            setMessage(\"请输入有效数量\")\n            clearTimeout(showTimes)\n            showTimes = setTimeout(()=>{\n                setMessage(undefined)\n            },1000)\n            return;\n        }\n        setLoading(!loading);\n        const createWallet = createWalletList[`create${walletType}Wallet`]\n        let createWalletTime = null;\n        let arr = [];\n        await handleCreateWallet(async ()=>{\n            let name = `${walletType}-${count}-${frequency}`;\n            await ExportToExcel(arr,name);\n            setCurrentAccounts({data: arr, name,createTime: Date.now()})\n            const _frequency = frequency + 1\n            setFrequency(_frequency)\n            setCurrentCount(0)\n            setLoading(false)\n        })\n        if (!arr.length){\n            setLoading(!loading)\n            return\n        }\n        async function handleCreateWallet(callback){\n            clearTimeout(createWalletTime);\n            createWalletTime = setTimeout(async ()=>{\n                const result = await createWallet()\n                arr.push(result)\n                setCurrentCount(arr.length)\n                if (arr.length < count){\n                    await handleCreateWallet(callback)\n                }else {\n                    clearTimeout(createWalletTime);\n                    callback()\n                }\n            },30)\n        }\n    }\n    return (\n        <div>\n            <MessageAlert message={message} handleClose={()=>setMessage(\"\")}/>\n            <div className=\"Identity\">\n                <div className=\"itemBox\">\n                    {/*<h2 className=\"label\">Identity Wallet <span>(ETH)</span></h2>*/}\n                    <p className=\"value\">生成的账号是本地CPU Hash计算生成的，所以单次推荐最多200个。</p>\n                </div>\n                <div className=\"itemBox\">\n                    <div className=\"itemBox_title\">\n                        <h3 className=\"label\">创建数量</h3>\n                        {\n                            countArr.map(item=>{\n                                return (\n                                    <span key={item} onClick={()=>{setCount(item)}}>{item}</span>\n                                )\n                            })\n                        }\n                    </div>\n                    <input className=\"CountInput\" type=\"text\" onChange={(e)=>{setCount(e.target.value)}} value={count}/>\n                </div>\n                <button className=\"createButton\" onClick={create} disabled={loading}>\n                    {\n                        loading ? `正在生成，${currentCount}/${count},生成后自动导出`:'完成'\n                    }\n                </button>\n            </div>\n            <SessionStorageData data={currentAccounts} download={ExportToExcel} />\n        </div>\n    )\n}","import React,{useState} from 'react'\nimport { Link } from \"react-router-dom\";\nimport Footer from '../../components/Footer'\nimport Reward from '../../components/Reward'\nimport { CopyToClipboard as Clipboard } from \"react-copy-to-clipboard\";\nimport {createETHWallet} from '../../utils/wallet/create'\nimport MessageAlert from \"../../components/MessageAlert\";\nconst walletList = ['ETH']\nconst createWalletList = {\n  createETHWallet\n}\nconst createWallet = createWalletList[`create${walletList[0]}Wallet`]\nlet createWalletTime = null;\nlet showTimes = null;\nexport default ()=> {\n  const [message, setMessage] = React.useState(false);\n  const [count, setCount] = useState(1);\n  const [accounts, setAccounts] = useState([]);\n  const [loading, setLoading] = useState(false)\n  const create = async () => {\n    if (loading){\n        clearInterval(createWalletTime)\n        setLoading(false)\n        return\n    };\n    setLoading(true);\n    createWalletTime = setInterval(async () => {\n        const result = await createWallet(count)\n        if (result) {\n            accounts.push(result)\n            setAccounts([...accounts]);\n        }\n    },30)\n  }\n  const handleCopy = () => {\n    setMessage(\"复制成功\")\n    clearTimeout(showTimes)\n    showTimes = setTimeout(()=>{\n      setMessage(undefined)\n    },1000)\n  }\n  return (\n    <>\n      <MessageAlert message={message} handleClose={()=>setMessage(\"\")}/>\n      <div className=\"Identity\">\n        <div className=\"itemBox\">\n          <div className=\"itemBox_title\">\n            <h3 className=\"label\">尾数连续豹子号(生成的帐号尾数连续几个豹子号)</h3>\n          </div>\n          <input className=\"CountInput\" type=\"text\" onChange={(e)=>{setCount(e.target.value)}} value={count}/>\n        </div>\n        <div>\n        <button className=\"createButton\" onClick={create}>\n          {\n              loading ? `Stop`:'Generate'\n          }\n        </button>\n        </div>\n      </div>\n      <dl style={{marginBottom:\"30px\"}}>\n          <dt>\n            <h3 className=\"label\">Accounts</h3>\n          </dt>\n          {\n              accounts.map((item, index)=>(\n                  <dd key={item.address.toLowerCase()}>\n                      <span>{index+1}.{item.address.toLowerCase()}</span>\n                      <Clipboard text={JSON.stringify(item)} onCopy={handleCopy}>\n                          <button>Copy Item</button>\n                      </Clipboard>\n                  </dd>\n              ))\n          }\n          {\n              !accounts.length && (<dd>Not Data</dd>)\n          }\n      </dl>\n    </>\n  );\n}\n\n","import React,{useState} from 'react'\nimport {Link, Route, Switch, NavLink} from \"react-router-dom\";\nimport Footer from '../../components/Footer'\nimport Reward from '../../components/Reward'\n\nimport packageJSON from \"../../../package.json\"\nimport \"./index.scss\"\nimport Batch from \"./batch\";\nimport Consecutive from \"./consecutive\";\n\nexport default () => {\n\n  return (\n    <section className={\"batch\"}>\n      <h2 className=\"title\">\n        <p>\n          Created Ethereum Wallet\n        </p>\n        <div>\n          <span>V{packageJSON.version}</span>\n          <a href={'https://github.com/leo-web3'} target={\"_blank\"}>\n            <svg t=\"1671171989350\" className=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\"\n                 xmlns=\"http://www.w3.org/2000/svg\" p-id=\"2677\" width=\"30\" height=\"30\">\n              <path\n                  d=\"M64 512c0 195.2 124.8 361.6 300.8 422.4 22.4 6.4 19.2-9.6 19.2-22.4v-76.8c-134.4 16-140.8-73.6-150.4-89.6-19.2-32-60.8-38.4-48-54.4 32-16 64 3.2 99.2 57.6 25.6 38.4 76.8 32 105.6 25.6 6.4-22.4 19.2-44.8 35.2-60.8-144-22.4-201.6-108.8-201.6-211.2 0-48 16-96 48-131.2-22.4-60.8 0-115.2 3.2-121.6 57.6-6.4 118.4 41.6 124.8 44.8 32-9.6 70.4-12.8 112-12.8 41.6 0 80 6.4 112 12.8 12.8-9.6 67.2-48 121.6-44.8 3.2 6.4 25.6 57.6 6.4 118.4 32 38.4 48 83.2 48 131.2 0 102.4-57.6 188.8-201.6 214.4 22.4 22.4 38.4 54.4 38.4 92.8v112c0 9.6 0 19.2 16 19.2C832 876.8 960 710.4 960 512c0-246.4-201.6-448-448-448S64 265.6 64 512z\"\n                  fill=\"#040000\" p-id=\"2678\"></path>\n            </svg>\n          </a>\n        </div>\n      </h2>\n      <hr/>\n      <ul className={\"createWallet-tabs\"}>\n        <li>\n          <NavLink to=\"/\" exact>\n            普通模式\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/consecutive\" exact>\n            条件模式\n          </NavLink>\n        </li>\n      </ul>\n      <>\n        <Route exact strict path=\"/\" component={Batch} />\n        <Route exact strict path=\"/consecutive\" component={Consecutive} />\n      </>\n      <Reward />\n      <Footer />\n    </section>\n  );\n}\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Batch from \"./view/batch\";\n\nexport default () => {\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n          <Route path=\"/\" component={Batch}></Route>\n      </Switch>\n    </BrowserRouter>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('app')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}